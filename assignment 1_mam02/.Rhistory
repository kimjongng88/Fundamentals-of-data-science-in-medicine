library(foreign)
getwd(MI.sav)
getwd(MI)
read.spss()
setwd("C://")
sessionInfo()
get.wd()
getwd()
getwd(MI.sav)
library(haven)
MI <- read_sav("Downloads/MI.sav")
View(MI)
View(MI)
install.packages("survival")
setRepositories()
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Aantal episodes <- c(1,2,5,2,7)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Aantal episodes))
dim(db)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Aantal episodes <- c(1,2,5,2,7)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Aantal episodes))
dim(db)
dim(db)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Aantal episodes))
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Episodes <- c(1,2,5,2,7)
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Episodes <- c(1,2,5,2,7)
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw')
Tijd <- c(14,31,47,22,56)
Episodes <- c(1,2,5,2,7)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Episodes))
dim(db)
names(db)
table(db,[,2])
table(db[,2])
mean(Tijd)
min(tijd)
min(Tijd)
max(Tijd)
load("~/Documents/Rstudio.sessie/db_MI.Rdata")
load("~/Documents/Rstudio.sessie/db_MI.Rdata")
summary(db_MI.Rdata)
load("~/Documents/Rstudio.sessie/db_MI.Rdata")
table(db$beroeps_jaren)
hist(db$beroeps_jaren)
max(db$beroeps_jaren)
min(db$beroeps_jaren)
db$beroep1 <- cut(db$beroeps_jaren,seq(0,8,by=1),right=FALSE)
table(db$beroep1)
quantile(db$beroeps_jaren,0.30,na.rm=T)
quantile(db$beroeps_jaren,0.50,na.rm=T)
quantile(db$beroeps_jaren,0.85,na.rm=T)
hist(db$RPQ_Total)
db$d_RPQ_Total <- db$RPQ_T3_Total-db$RPQ_Total
db$RPQ_T3_Total-db$RPQ_Total
hist(db$d_RPQ_Total)
median(db$d_RPQ_Total,na.rm=T)
median(db$d_RPQ_Total)
sd(db$d_RPQ_Total)
d(db$d_RPQ_Total,na.rm=T)
sd(db$d_RPQ_Total,na.rm=T)
7.493387^2
hist(db$d_RPQ_Total, col=4, freq = F)
curve(dnorm(x,mean=-8.43, sd=7.49), add=T, lwd=2)
quantile(db$d_RPQ_Total,0.025,na.rm=T)
quantile(db$d_RPQ_Total,0.975,na.rm=T)
db$d_RPQ_norm <- (db$d_RPQ_Total-mean(db$d_RPQ_Total,na.rm=T))/sd(db$d_RPQ_Total,na.rm=T)
quantile(db$d_RPQ_norm,c(0.025,0.25,0.50,0.75,0.975),na.rm=T)
hist(db$d_RPQ_norm,freq = F)
curve(dnorm(x,mean=0,sd=1),add=T,lwd=2)
qqnorm(db$d_RPQ_norm, ylim=c(-4,4), xlim=c(-4,4))
qqline(db$d_RPQ_norm, distribution=qnorm,col=2)
pnorm(c(-1.96,0,1.65))
chi1 <- rchisq(10000,1,0)
hist(chi1, freq=F, breaks=seq(0,50,1))
chi1 <- rchisq(10000,1,0)> hist(chi1, freq=F, breaks=seq(0,50,1))
hist(chi1, freq=F, breaks=seq(0,50,1))chi1 <- rchisq(10000,1,0)> hist(chi1, freq=F, breaks=seq(0,50,1))
chi2 <- rchisq(10000,2,0)
hist(chi1, freq=F, breaks=seq(0,50,1))
chi2 <- rchisq(10000,2,0)
hist(chi2, freq=F, breaks=seq(0,50,1))
x <- seq(-4, 4, length=10000)
plot(x, dt(x, df=1), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
plot(x, dt(x, df=5), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
plot(x, dt(x, df=20), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
plot(x, dt(x, df=500), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
x <- seq(0,10,length=10000)
plot(x, df(x,2,10), type='l', xlim=c(0,10), ylim=c(0,1), col=1, lwd=2)
trekking <- rnorm(17E6,100,15)
mean(trekking)
hist(trekking)
curve(dnorm(x, mean=100, sd=15),add=T,lwd=2)
curve(dnorm(trekking, mean=100, sd=15),add=T,lwd=2)
hist(trekking)
curve(dnorm(x, mean=100, sd=15),add=T,lwd=2)
curve(dnorm(x, mean=100, sd=15),add=T,lwd=2)
curve(dnorm(trekking, mean=100, sd=15),add=T,lwd=2)
pnorm(85,100,15,lower.tail=T)
pnorm(115,100,15,lower.tail=T)
quantile(trekking,0.025)
quantile(trekking,0.975)
rnorm(trekking,10)
n10 <- rnorm(10,100,15)
n1000 <- rnorm(1000,100,15)
mean(n1000);sd(n1000)
db10 <- dataframe(matrix(rnorm(1000*10,100,15)))
db10 <- data.frame(matrix(rnorm(1000*10,100,15)))
db1000 <- data.frame(matrix(rnorm(1000*1000,100,15)))
mean(db10)
db10 <- data.frame(matrix(rnorm(1000*10,100,15)10,1000))
db10 <- data.frame(matrix(rnorm(10*1000,100,15)10,1000))
db10 <-data.frame(matrix(rnorm(10*1000,100,15),10,1000))
sd(db$mean.10);sd(db$mean.1000)
db <-data.frame(cbind(apply(db10,2,mean),apply(db1000,2,mean)))
sd(db$mean.10);sd(db$mean.1000)
db1000 <-data.frame(matrix(rnorm(1000*1000,100,15),1000,1000))
db <-data.frame(cbind(apply(db10,2,mean),apply(db1000,2,mean)))
sd(db$mean.10);sd(db$mean.1000)
colnames(db) <-c('mean.10','mean.1000')
sd(db$mean.10);sd(db$mean.1000)
SEM <- sd(db$mean.10)/sqrt(10)
SEM = sd(db$mean.10)/sqrt(10)
15/sqrt(10)
15/sqrt(1000)
quantile(db,0.025)
quantile(db$mean.10,0.025)
quantile(db$mean.1000,0.975)
set.seed(1)
db <- data.frame(rbind(cbind(rnorm(30,100,15),1),cbind(rnorm(30,100,15),0)))
colnames(db) <- c('IQ','Vrouw')
t.test(IQ~Vrouw,data=db,var.equal=T)
SIM <- function(x){temp <- data.frame(rbind(cbind(rnorm(30,100,15),1),cbind(rnorm(30,100,15),0)))
colnames(temp) <- c('IQ', 'Vrouw')
t.test(IQ~Vrouw,data=temp,var.equal=T)$stat
}
test <-sapply(1:1000,FUN=SIM)
x <- seq(-5,5,0.1)
hist(test,freq=F); curve(dt(x,df=58),add=T,lwd=2) ## histogram en t-verdeling bij 58 vrijheidsgraden
quantile(test,0.025)
quantile(test,0.975)
qt(0.025,58,lower.tail=T)
set.seed(1)db <-data.frame(rbind(cbind(rnorm(30,105,15),1),cbind(rnorm(30,95,15),0)))colnames(db) <-c('IQ','Vrouw')t.test(IQ~Vrouw,data=db,var.equal=T)
set.seed(1)
db <-data.frame(rbind(cbind(rnorm(30,105,15),1),cbind(rnorm(30,95,15),0)))
colnames(db) <-c('IQ','Vrouw')
t.test(IQ~Vrouw,data=db,var.equal=T)
library(doBy)
install.packages("doBy",dependencies = TRUE)
library(doBy)
stall.packages(‘doBy’,dependencies=T)
nstall.packages(‘doBy’,dependencies=T)
install.packages(‘doBy’,dependencies=T)
`deviramanan2016.nki.breast.cancer.data.(1)` <- read.table("~/Downloads/deviramanan2016-nki-breast-cancer-data (1).zip", header=TRUE, quote="\"")
View(`deviramanan2016.nki.breast.cancer.data.(1)`)
library(readxl)
NKI_cleaned <- read_excel("Downloads/deviramanan2016-nki-breast-cancer-data/original/NKI_cleaned.csv")
View(NKI_cleaned)
library(readr)
NKI_cleaned <- read_csv("Downloads/deviramanan2016-nki-breast-cancer-data/original/NKI_cleaned.csv")
View(NKI_cleaned)
library(readxl)
nki_cleaned <- read_excel("Downloads/deviramanan2016-nki-breast-cancer-data/data/nki_cleaned.csv")
View(nki_cleaned)
nki_cleaned <- read.csv("~/Downloads/deviramanan2016-nki-breast-cancer-data/data/nki_cleaned.csv", header=FALSE)
View(nki_cleaned)
import pandas as pd
raw.training <- read.table("simulatedConcentrations.recoded.training.txt", sep = "\t", header = T)
raw.test <- read.table("simulatedConcentrations.recoded.test.txt", sep = "\t", header = T)
raw.training$cc <- as.factor(raw.training$cc)
raw.test$cc <- as.factor(raw.test$cc)
setwd("~/MAM_02/assignment 1_mam02")
# Set your working directory to change to the folder where you downloaded the data file
# Thus replace the pathname H:/Downloads/ with the folder containing the data file
# Note that in Windows you have to use '/' instead of the normal '\' in the folder pathname
setwd("H:/Downloads/")
library(readr)
id_mapping <- read_csv("781670.f1/id_mapping.csv")
View(id_mapping)
library(readr)
diabetic_data_initial <- read_csv("781670.f1/diabetic_data_initial.csv")
View(diabetic_data_initial)
View(diabetic_data_initial)
data_diabetic <- read.csv(file="diabetic_data_initial.csv", header=TRUE, sep=",")
data_diabetic <- read.csv(file="diabetic_data_initial.csv", header=TRUE, sep=",")
View(diabetic_data_initial)
