library(foreign)
getwd(MI.sav)
getwd(MI)
read.spss()
setwd("C://")
sessionInfo()
get.wd()
getwd()
getwd(MI.sav)
library(haven)
MI <- read_sav("Downloads/MI.sav")
View(MI)
View(MI)
install.packages("survival")
setRepositories()
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Aantal episodes <- c(1,2,5,2,7)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Aantal episodes))
dim(db)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Aantal episodes <- c(1,2,5,2,7)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Aantal episodes))
dim(db)
dim(db)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Aantal episodes))
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Episodes <- c(1,2,5,2,7)
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw)
Tijd <- c(14,31,47,22,56)
Episodes <- c(1,2,5,2,7)
Obs <- c(1,2,3,4,5)
Geslacht <- c('man', 'vrouw', 'man', 'man', 'vrouw')
Tijd <- c(14,31,47,22,56)
Episodes <- c(1,2,5,2,7)
db <- data.frame(cbind(Obs, Geslacht,Tijd,Episodes))
dim(db)
names(db)
table(db,[,2])
table(db[,2])
mean(Tijd)
min(tijd)
min(Tijd)
max(Tijd)
load("~/Documents/Rstudio.sessie/db_MI.Rdata")
load("~/Documents/Rstudio.sessie/db_MI.Rdata")
summary(db_MI.Rdata)
load("~/Documents/Rstudio.sessie/db_MI.Rdata")
table(db$beroeps_jaren)
hist(db$beroeps_jaren)
max(db$beroeps_jaren)
min(db$beroeps_jaren)
db$beroep1 <- cut(db$beroeps_jaren,seq(0,8,by=1),right=FALSE)
table(db$beroep1)
quantile(db$beroeps_jaren,0.30,na.rm=T)
quantile(db$beroeps_jaren,0.50,na.rm=T)
quantile(db$beroeps_jaren,0.85,na.rm=T)
hist(db$RPQ_Total)
db$d_RPQ_Total <- db$RPQ_T3_Total-db$RPQ_Total
db$RPQ_T3_Total-db$RPQ_Total
hist(db$d_RPQ_Total)
median(db$d_RPQ_Total,na.rm=T)
median(db$d_RPQ_Total)
sd(db$d_RPQ_Total)
d(db$d_RPQ_Total,na.rm=T)
sd(db$d_RPQ_Total,na.rm=T)
7.493387^2
hist(db$d_RPQ_Total, col=4, freq = F)
curve(dnorm(x,mean=-8.43, sd=7.49), add=T, lwd=2)
quantile(db$d_RPQ_Total,0.025,na.rm=T)
quantile(db$d_RPQ_Total,0.975,na.rm=T)
db$d_RPQ_norm <- (db$d_RPQ_Total-mean(db$d_RPQ_Total,na.rm=T))/sd(db$d_RPQ_Total,na.rm=T)
quantile(db$d_RPQ_norm,c(0.025,0.25,0.50,0.75,0.975),na.rm=T)
hist(db$d_RPQ_norm,freq = F)
curve(dnorm(x,mean=0,sd=1),add=T,lwd=2)
qqnorm(db$d_RPQ_norm, ylim=c(-4,4), xlim=c(-4,4))
qqline(db$d_RPQ_norm, distribution=qnorm,col=2)
pnorm(c(-1.96,0,1.65))
chi1 <- rchisq(10000,1,0)
hist(chi1, freq=F, breaks=seq(0,50,1))
chi1 <- rchisq(10000,1,0)> hist(chi1, freq=F, breaks=seq(0,50,1))
hist(chi1, freq=F, breaks=seq(0,50,1))chi1 <- rchisq(10000,1,0)> hist(chi1, freq=F, breaks=seq(0,50,1))
chi2 <- rchisq(10000,2,0)
hist(chi1, freq=F, breaks=seq(0,50,1))
chi2 <- rchisq(10000,2,0)
hist(chi2, freq=F, breaks=seq(0,50,1))
x <- seq(-4, 4, length=10000)
plot(x, dt(x, df=1), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
plot(x, dt(x, df=5), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
plot(x, dt(x, df=20), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
plot(x, dt(x, df=500), type='l', xlim=c(-4,4), ylim=c(0,0.5), col=1, lwd=2)
x <- seq(0,10,length=10000)
plot(x, df(x,2,10), type='l', xlim=c(0,10), ylim=c(0,1), col=1, lwd=2)
trekking <- rnorm(17E6,100,15)
mean(trekking)
hist(trekking)
curve(dnorm(x, mean=100, sd=15),add=T,lwd=2)
curve(dnorm(trekking, mean=100, sd=15),add=T,lwd=2)
hist(trekking)
curve(dnorm(x, mean=100, sd=15),add=T,lwd=2)
curve(dnorm(x, mean=100, sd=15),add=T,lwd=2)
curve(dnorm(trekking, mean=100, sd=15),add=T,lwd=2)
pnorm(85,100,15,lower.tail=T)
pnorm(115,100,15,lower.tail=T)
quantile(trekking,0.025)
quantile(trekking,0.975)
rnorm(trekking,10)
n10 <- rnorm(10,100,15)
n1000 <- rnorm(1000,100,15)
mean(n1000);sd(n1000)
db10 <- dataframe(matrix(rnorm(1000*10,100,15)))
db10 <- data.frame(matrix(rnorm(1000*10,100,15)))
db1000 <- data.frame(matrix(rnorm(1000*1000,100,15)))
mean(db10)
db10 <- data.frame(matrix(rnorm(1000*10,100,15)10,1000))
db10 <- data.frame(matrix(rnorm(10*1000,100,15)10,1000))
db10 <-data.frame(matrix(rnorm(10*1000,100,15),10,1000))
sd(db$mean.10);sd(db$mean.1000)
db <-data.frame(cbind(apply(db10,2,mean),apply(db1000,2,mean)))
sd(db$mean.10);sd(db$mean.1000)
db1000 <-data.frame(matrix(rnorm(1000*1000,100,15),1000,1000))
db <-data.frame(cbind(apply(db10,2,mean),apply(db1000,2,mean)))
sd(db$mean.10);sd(db$mean.1000)
colnames(db) <-c('mean.10','mean.1000')
sd(db$mean.10);sd(db$mean.1000)
SEM <- sd(db$mean.10)/sqrt(10)
SEM = sd(db$mean.10)/sqrt(10)
15/sqrt(10)
15/sqrt(1000)
quantile(db,0.025)
quantile(db$mean.10,0.025)
quantile(db$mean.1000,0.975)
set.seed(1)
db <- data.frame(rbind(cbind(rnorm(30,100,15),1),cbind(rnorm(30,100,15),0)))
colnames(db) <- c('IQ','Vrouw')
t.test(IQ~Vrouw,data=db,var.equal=T)
SIM <- function(x){temp <- data.frame(rbind(cbind(rnorm(30,100,15),1),cbind(rnorm(30,100,15),0)))
colnames(temp) <- c('IQ', 'Vrouw')
t.test(IQ~Vrouw,data=temp,var.equal=T)$stat
}
test <-sapply(1:1000,FUN=SIM)
x <- seq(-5,5,0.1)
hist(test,freq=F); curve(dt(x,df=58),add=T,lwd=2) ## histogram en t-verdeling bij 58 vrijheidsgraden
quantile(test,0.025)
quantile(test,0.975)
qt(0.025,58,lower.tail=T)
set.seed(1)db <-data.frame(rbind(cbind(rnorm(30,105,15),1),cbind(rnorm(30,95,15),0)))colnames(db) <-c('IQ','Vrouw')t.test(IQ~Vrouw,data=db,var.equal=T)
set.seed(1)
db <-data.frame(rbind(cbind(rnorm(30,105,15),1),cbind(rnorm(30,95,15),0)))
colnames(db) <-c('IQ','Vrouw')
t.test(IQ~Vrouw,data=db,var.equal=T)
library(doBy)
install.packages("doBy",dependencies = TRUE)
library(doBy)
stall.packages(‘doBy’,dependencies=T)
nstall.packages(‘doBy’,dependencies=T)
install.packages(‘doBy’,dependencies=T)
`deviramanan2016.nki.breast.cancer.data.(1)` <- read.table("~/Downloads/deviramanan2016-nki-breast-cancer-data (1).zip", header=TRUE, quote="\"")
View(`deviramanan2016.nki.breast.cancer.data.(1)`)
library(readxl)
NKI_cleaned <- read_excel("Downloads/deviramanan2016-nki-breast-cancer-data/original/NKI_cleaned.csv")
View(NKI_cleaned)
library(readr)
NKI_cleaned <- read_csv("Downloads/deviramanan2016-nki-breast-cancer-data/original/NKI_cleaned.csv")
View(NKI_cleaned)
library(readxl)
nki_cleaned <- read_excel("Downloads/deviramanan2016-nki-breast-cancer-data/data/nki_cleaned.csv")
View(nki_cleaned)
nki_cleaned <- read.csv("~/Downloads/deviramanan2016-nki-breast-cancer-data/data/nki_cleaned.csv", header=FALSE)
View(nki_cleaned)
import pandas as pd
setwd("~/assignment 1_mam02/781670.f1")
data_diabetic <- read.csv(file="diabetic_data_initial.csv", header=TRUE, sep=",")
# Let's quickly check the first few rows of the data
head(data_diabetic)
# Let's check the names of the variables (i.e., column names)
names(data_diabetic)
# How many rows are there?
dim(data_diabetic)[1]
# your answer: 101766
# Are these all unique encounters?
length(unique(data_diabetic$encounter_id))
# your answer: 101766
# And are they all unique patients?
length(unique(data_diabetic$patient_nbr))
# I found the way to do this on stackoverflow.com (remember this site because you can find a lot of answers on R)
# https://stackoverflow.com/questions/19944334/extract-rows-for-the-first-occurrence-of-a-variable-in-a-data-frame#19944458
data_diabetic_first_encounters <- data_diabetic[match(unique(data_diabetic$patient_nbr), data_diabetic$patient_nbr),]
# "... removed all encounters that resulted in either discharge to a hospice or patient death ..."
# We use the dplyr library to filter the data
library("dplyr")
# The discharge_disposition_id column contains info on the discharge
# In id_mapping.csv we find discharge IDs 11 (Expired), 13 (Hospice / home), 14 (Hospice / medical facility)
names_removed_discharge_disposition_id <- c(11,13,14)
# Thus we remove these rows from the data
data_diabetic_selected = filter(data_diabetic_first_encounters, !data_diabetic_first_encounters$discharge_disposition_id %in% names_removed_discharge_disposition_id)
# Do we now have 69,984 encounters as mentioned in the paper?
dim(data_diabetic_selected)[1]
# your answer: No, 4 are missing
# And let's quickly check if we now only have unique patients
length(unique(data_diabetic_selected$patient_nbr))
# your answer: Yes, all 69980 patients are unique.
#############################################
# Calculate descriptive statistics
#############################################
# Assuming that we have selected the data properly, we will show you the calculation of a single row from Table 3
# We will calculate the numbers for: Gender = Female
# Female: Number of encounters
Female_Number_of_encounters <- table(data_diabetic_selected$gender)[1]
# Female: % of the population
Population_size <- dim(data_diabetic_selected)[1]
Female_Percentage_of_population <- round(Female_Number_of_encounters / Population_size * 100, 1)
# Female Readmitted: Number of encounters
Female_Readmitted_Number_of_encounters <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$gender)[1]
# Female Readmitted: % in group
Percentage_Female_ad <- round(Female_Readmitted_Number_of_encounters / Female_Number_of_encounters * 100, 1)
#############################################
# From here on, you're on your own!
# Complete the source file such that
#############################################
# We will calculate the numbers for: Gender = Male
Male_Number_of_encounters <- table(data_diabetic_selected$gender)[2]
# Number of males = 32743
Male_Percentage_of_population <- round(Male_Number_of_encounters / Population_size * 100, 2)
# Percentage = 46.8%
Male_Readmitted_Number_of_encounters <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$gender)[2]
# Number of reamitted = 2916. Not the same number. Readmitteddiffers from the paper.
Percentage_male_ad <- round(Male_Readmitted_Number_of_encounters / Male_Number_of_encounters * 100, 2)
# % = 8.91, not the same number.
# calculate numbers for: HbA1c
Performed_test <- sum(data_diabetic_selected$A1Cresult == ">7") + sum(data_diabetic_selected$A1Cresult == ">8") + sum(data_diabetic_selected$A1Cresult == "Norm")
Non_performed <- Population_size - Performed_test
No_result_readmitted <- sum(data_diabetic_selected[data_diabetic_selected$A1Cresult == "None",]$readmitted == "<30")
Percentage_No_result <- round(Non_performed / Population_size * 100, 2)
Percentage_No_result_read <- round(No_result_readmitted / Non_performed * 100, 2)
############ Normal results
Normal_results <- sum(data_diabetic_selected$A1Cresult == "Norm") + sum(data_diabetic_selected$A1Cresult == ">7")
# readmitted
Normal_readmitted <- sum(data_diabetic_selected[data_diabetic_selected$A1Cresult == "Norm",]$readmitted == "<30")
Percentage_Normal_result <- round(Normal_results / Population_size * 100, 2)
Percentage_Normal_result_read <- round(Normal_readmitted / Normal_results * 100, 2)
##### High
# High and changed
High_change <- sum(data_diabetic_selected[data_diabetic_selected$A1Cresult == ">8",]$change == "Ch")
High_ch_read <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$A1Cresult[data_diabetic_selected$change == "Ch"])[2]
Percentage_High <- round(High_change / Population_size * 100, 2)
Percentage_High_ch_AD <- round(High_ch_read / High_change * 100, 2)
# High and not changed
High_not_change <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$A1Cresult == ">8")
High_n_read <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$A1Cresult[data_diabetic_selected$change == "No"])[2]
Percentage_High_not <- round(High_not_change / Population_size * 100, 2)
Percentage_High_n_AD <- round(High_n_read / High_not_change * 100, 2)
# calculate numbers for: Discharge disposition
Discharge_Home <- sum(data_diabetic_selected$discharge_disposition_id == "1")
Discharge_Other <- sum(data_diabetic_selected$discharge_disposition_id != "1")
Percentage_Home <- round(Discharge_Home / Population_size * 100, 2)
Percentage_Other <- round(Discharge_Other / Population_size * 100, 2)
Home_readmitted <- sum(data_diabetic_selected[data_diabetic_selected$discharge_disposition_id == "1",]$readmitted == "<30")
Other_readmitted <- sum(data_diabetic_selected[data_diabetic_selected$discharge_disposition_id != "1",]$readmitted == "<30")
Percentage_Home_read <- round(Home_readmitted / Discharge_Home * 100, 2)
Percentage_Other_read <- round(Other_readmitted / Discharge_Other * 100, 2)
###### Admission source
Admission_ER <- sum(data_diabetic_selected$admission_source_id == "7")
Admission_Phy <- sum(data_diabetic_selected$admission_source_id == "1")
Admission_other <- sum(data_diabetic_selected$admission_source_id != "7") - sum(data_diabetic_selected$admission_source_id == "1")
Percentage_ER <- round(Admission_ER / Population_size * 100, 2)
Percentage_P <- round(Admission_Phy / Population_size * 100, 2)
Percentage_O <- round(Admission_other / Population_size * 100, 2)
Admission_ER_AD <- sum(data_diabetic_selected[data_diabetic_selected$admission_source_id == "7",]$readmitted == "<30")
Admission_Phy_AD <- sum(data_diabetic_selected[data_diabetic_selected$admission_source_id == "1",]$readmitted == "<30")
Admission_other_AD <- sum(data_diabetic_selected[data_diabetic_selected$admission_source_id != "7",]$readmitted == "<30") - sum(data_diabetic_selected[data_diabetic_selected$admission_source_id == "1",]$readmitted == "<30")
Percentage_AD_ER <- round(Admission_ER_AD / Admission_ER * 100, 2)
Percentage_AD_P <- round(Admission_Phy_AD / Admission_Phy * 100, 2)
Percentage_AD_O <- round(Admission_other_AD / Admission_other * 100, 2)
#### Specialty
IM <- sum(data_diabetic_selected$medical_specialty == "InternalMedicine")
Cardiology <- sum(data_diabetic_selected$medical_specialty == "Cardiology")
Surgery <- sum(data_diabetic_selected$medical_specialty == "Surgery-General") + sum(data_diabetic_selected$medical_specialty == "Surgery-Cardiovascular/Thoracic")
F_GM <- sum(data_diabetic_selected$medical_specialty == "Family/GeneralPractice")
Unknown <- sum(data_diabetic_selected$medical_specialty == "?")
Other <- Population_size - IM - Cardiology - Surgery - F_GM - Unknown
Percentage_IM <- round(IM/Population_size * 100, 2)
Percentage_C <- round(Cardiology/Population_size * 100, 2)
Percentage_S <- round(Surgery/Population_size * 100, 2)
Percentage_F <- round(F_GM/Population_size * 100, 2)
Percentage_U <- round(Unknown/Population_size * 100, 2)
Percentage_O <- round(Other/Population_size * 100, 2)
#### Specialty, readmission
IM_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$medical_specialty == "InternalMedicine")
Cardiology_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$medical_specialty == "Cardiology")
Surgery_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$medical_specialty == "Surgery-General") + sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$medical_specialty == "Surgery-Cardiovascular/Thoracic")
F_GM_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$medical_specialty == "Family/GeneralPractice")
Unknown_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$medical_specialty == "?")
Other_AD <- sum(data_diabetic_selected$readmitted == "<30") - IM_AD - Cardiology_AD - Surgery_AD - F_GM_AD - Unknown_AD
Percentage_IM_AD <- round(IM_AD/IM * 100, 2)
Percentage_C_AD <- round(Cardiology_AD/Cardiology * 100, 2)
Percentage_S_AD <- round(Surgery_AD/Surgery * 100, 2)
Percentage_F_AD <- round(F_GM_AD/F_GM * 100, 2)
Percentage_U_AD <- round(Unknown_AD/Unknown * 100, 2)
Percentage_O_AD <- round(Other_AD/Other * 100, 2)
#### AGE
Thirty_younger <- sum(data_diabetic_selected$age == "[0-10)") + sum(data_diabetic_selected$age == "[10-20)") + sum(data_diabetic_selected$age == "[20-30)")
Sixty_Thirty <- sum(data_diabetic_selected$age == "[30-40)") + sum(data_diabetic_selected$age == "[40-50)") + sum(data_diabetic_selected$age == "[50-60)")
Older <- Population_size - Thirty_younger - Sixty_Thirty
Percentage_T_Y <- round(Thirty_younger/Population_size * 100, 2)
Percentage_S_T <- round(Sixty_Thirty/Population_size * 100, 2)
Percentage_Old <- round(Older/Population_size * 100, 2)
Thirty_younger_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$age == "[0-10)") + sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$age == "[10-20)") + sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$age == "[20-30)")
Sixty_Thirty_AD <- sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$age == "[30-40)") + sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$age == "[40-50)") + sum(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$age == "[50-60)")
Older_AD <- Population_size - Thirty_younger - Sixty_Thirty
Percentage_T_Y_AD <- round(Thirty_younger_AD/Thirty_younger * 100, 2)
Percentage_S_T_AD <- round(Sixty_Thirty_AD/Sixty_Thirty* 100, 2)
Percentage_Old_AD <- round(Older_AD/Older * 100, 2)
# race
race_table <- table(data_diabetic_selected$race)
af_amer <- table(data_diabetic_selected$race)[2]
asian <- table(data_diabetic_selected$race)[3]
cauc <- table(data_diabetic_selected$race)[4]
hisp <- table(data_diabetic_selected$race)[5]
other <- table(data_diabetic_selected$race)[6] + table(data_diabetic_selected$race)[5] + table(data_diabetic_selected$race)[3]
missing <- table(data_diabetic_selected$race)[1]
#percentage race
percetage_af_amer <- round(af_amer / Population_size * 100, 2)
percetage_cauc <- round(cauc / Population_size * 100, 2)
percetage_other <- round(other / Population_size * 100, 2)
percetage_missing <- round(missing / Population_size * 100, 2)
#race readmission
af_amer_read <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$race)[2]
cauc_read <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$race)[4]
other_read <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$race)[6] + table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$race)[5] + table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$race)[3]
missing_read <- table(data_diabetic_selected[data_diabetic_selected$readmitted == "<30",]$race)[1]
percentage_af_amer_read <- round(af_amer_read / af_amer * 100, 2)
percentage_cauc_read <- round(cauc_read / cauc * 100, 2)
percentage_other_read <- round(other_read / other * 100, 2)
percentage_missing_read <- round(missing_read / missing * 100, 2)
#change categorical age column into numeric to obtain average and median age
data_diabetic_selected$age_avg <- data_diabetic_selected$age
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[0-10)"] <- "5"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[10-20)"] <- "15"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[20-30)"] <- "25"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[30-40)"] <- "35"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[40-50)"] <- "45"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[50-60)"] <- "55"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[60-70)"] <- "65"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[70-80)"] <- "75"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[80-90)"] <- "85"
data_diabetic_selected$age_avg[data_diabetic_selected$age_avg == "[90-100)"] <- "95"
data_diabetic_selected$age_avg <- as.numeric(data_diabetic_selected$age_avg)
summary(data_diabetic_selected$age_avg)
#############################################
#TABLE
#############################################
# Data into matrix
data.a <- c(Non_performed, Percentage_No_result, No_result_readmitted, Percentage_No_result_read,
High_change, Percentage_High, High_ch_read, Percentage_High_ch_AD,
High_not_change, Percentage_High_not, High_n_read, Percentage_High_n_AD,
Normal_results,Percentage_Normal_result,Normal_readmitted,Percentage_Normal_result_read,
Male_Number_of_encounters,Male_Percentage_of_population,Male_Readmitted_Number_of_encounters,Percentage_male_ad,
Female_Number_of_encounters,Female_Percentage_of_population,Female_Readmitted_Number_of_encounters,Percentage_Female_ad,
Discharge_Home,Percentage_Home,Home_readmitted,Percentage_Home_read,
Discharge_Other,Percentage_Other,Other_readmitted,Percentage_Other_read,
Admission_ER, Percentage_ER, Admission_ER_AD, Percentage_AD_ER,
Admission_Phy,Percentage_P, Admission_Phy_AD, Percentage_AD_P,
Admission_other,Percentage_O, Admission_other_AD, Percentage_AD_O,
IM,Percentage_IM,IM_AD,Percentage_IM_AD,
Cardiology,Percentage_C,Cardiology_AD,Percentage_C_AD,
Surgery, Percentage_S,Surgery_AD, Percentage_S_AD,
F_GM,Percentage_F,F_GM_AD,Percentage_F_AD,
Unknown, Percentage_U,Unknown_AD,Percentage_U_AD,
Other, Percentage_O,Other_AD,Percentage_O_AD,
af_amer,percetage_af_amer,af_amer_read,percentage_af_amer_read,
cauc,percetage_cauc,cauc_read,percentage_cauc_read,
other,percetage_other,other_read,percentage_other_read,
missing,percetage_missing,missing_read,percentage_missing_read,
Thirty_younger,Percentage_T_Y,Thirty_younger_AD,Percentage_T_Y_AD,
Sixty_Thirty,Percentage_S_T,Sixty_Thirty_AD,Percentage_S_T_AD,
Older,Percentage_Old,Older_AD,Percentage_Old_AD
)
# create matrix with 24 columns and 4 rows
data = matrix(data.a, nrow=24, ncol=4, byrow=TRUE)
# specify the column names and row names of matrix
colnames(data) = c('n ncounters','% of population',' n encounters','% in group')
rownames(data) <- c('No test', 'Result High + medicine changed','Result high + medicine unchanged','Normal result',
'male','female',
'Discharged to home', 'Otherwise',
'Admitted from ER', 'Admitted becuase of referral', 'Otherwise',
'Internal Medicine', 'Cardiology', 'Surgery', 'Family/GP', 'Missing or unkown', 'Other',
'African American', 'Caucasioan', 'Other', 'Missing',
'<30 year', '30-60 years', ">60")
# assign to table
final2=as.table(data)
# display
final
final2
Older_AD <- sum(data_diabetic_selected$readmitted == "<30") - Thirty_younger_AD - Sixty_Thirty_AD
Percentage_Old_AD <- round(Older_AD/Older * 100, 2)
data.a <- c(Non_performed, Percentage_No_result, No_result_readmitted, Percentage_No_result_read,
High_change, Percentage_High, High_ch_read, Percentage_High_ch_AD,
High_not_change, Percentage_High_not, High_n_read, Percentage_High_n_AD,
Normal_results,Percentage_Normal_result,Normal_readmitted,Percentage_Normal_result_read,
Male_Number_of_encounters,Male_Percentage_of_population,Male_Readmitted_Number_of_encounters,Percentage_male_ad,
Female_Number_of_encounters,Female_Percentage_of_population,Female_Readmitted_Number_of_encounters,Percentage_Female_ad,
Discharge_Home,Percentage_Home,Home_readmitted,Percentage_Home_read,
Discharge_Other,Percentage_Other,Other_readmitted,Percentage_Other_read,
Admission_ER, Percentage_ER, Admission_ER_AD, Percentage_AD_ER,
Admission_Phy,Percentage_P, Admission_Phy_AD, Percentage_AD_P,
Admission_other,Percentage_O, Admission_other_AD, Percentage_AD_O,
IM,Percentage_IM,IM_AD,Percentage_IM_AD,
Cardiology,Percentage_C,Cardiology_AD,Percentage_C_AD,
Surgery, Percentage_S,Surgery_AD, Percentage_S_AD,
F_GM,Percentage_F,F_GM_AD,Percentage_F_AD,
Unknown, Percentage_U,Unknown_AD,Percentage_U_AD,
Other, Percentage_O,Other_AD,Percentage_O_AD,
af_amer,percetage_af_amer,af_amer_read,percentage_af_amer_read,
cauc,percetage_cauc,cauc_read,percentage_cauc_read,
other,percetage_other,other_read,percentage_other_read,
missing,percetage_missing,missing_read,percentage_missing_read,
Thirty_younger,Percentage_T_Y,Thirty_younger_AD,Percentage_T_Y_AD,
Sixty_Thirty,Percentage_S_T,Sixty_Thirty_AD,Percentage_S_T_AD,
Older,Percentage_Old,Older_AD,Percentage_Old_AD
)
# create matrix with 24 columns and 4 rows
data = matrix(data.a, nrow=24, ncol=4, byrow=TRUE)
# specify the column names and row names of matrix
colnames(data) = c('n ncounters','% of population',' n encounters','% in group')
rownames(data) <- c('No test', 'Result High + medicine changed','Result high + medicine unchanged','Normal result',
'male','female',
'Discharged to home', 'Otherwise',
'Admitted from ER', 'Admitted becuase of referral', 'Otherwise',
'Internal Medicine', 'Cardiology', 'Surgery', 'Family/GP', 'Missing or unkown', 'Other',
'African American', 'Caucasioan', 'Other', 'Missing',
'<30 year', '30-60 years', ">60")
# assign to table
final2=as.table(data)
# display
final2
